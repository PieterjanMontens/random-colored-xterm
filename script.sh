#!/bin/bash
# Pieterjan Montens 2013
# Random colored xterms
#
# bg_max: max value of background brightness (1 - 255)
# bg_min: min value of background brightness (1 - 255)
#
# note: for better contrast between background and foreground, avoid values between 96 and 160 
# (they're nice to look at, but hard to read)
#
# note: the larger the interval between bg_max and bg_min, the more variance you'll get in brightness
# between xterms generated by this script
#
# note: dark backgrounds get bright text, bright backgrounds get dark text
#
# Modify as you seem fit
#

### CONFIG VALUES #####
bg_max=80
bg_min=60
#######################


### SCRIPT CODE #######
fg_level=$(( 256 - ${bg_max}))
bg_level=$((${bg_max} - ${bg_min}))

do_r=$((${RANDOM} % 2))
do_g=$((${RANDOM} % 2))
do_b=$((${RANDOM} % 2))

max256 ()
    {
    if [ $1 -gt 255 ] ; then
        return 255
    fi
    return $1
    }

choice=$false
link=$false

case "$1" in
    "b") ;& "blue")
        choice=$true
        do_b=1; do_r=0; do_g=0
        ;;
    "r") ;& "red")
        choice=$true
        do_b=0; do_r=1; do_g=0
        ;;
    "g") ;& "green")
        choice=$true
        do_b=0; do_r=0; do_g=1
        ;;
    "y") ;& "yellow") # Should be amber
        choice=$true
        link="rg"
        do_b=0; do_r=1; do_g=1
        ;;
    "m") ;& "magenta")
        choice=$true
        link="rb"
        do_b=1; do_r=1; do_g=0
        ;;
    "c") ;& "cyan") # I know it's not cyan you'd prefer blue-green ?
        choice=$true
        link="gb"
        do_b=1; do_r=0; do_g=1
        ;;
esac

if  ${choice}; then
    bg_level=${bg_max}
    bg_min=$((${bg_min}/10))
fi

if  [ ${do_r} == 1 ]; then
    b_random_r=$((${RANDOM} % ${bg_level} + ${bg_min}))
else
    b_random_r=$((${RANDOM} % ${bg_min}))
fi
if  [ ${do_g} == 1 ]; then
    b_random_g=$((${RANDOM} % ${bg_level} + ${bg_min}))
else
    b_random_g=$((${RANDOM} % ${bg_min}))
fi
if  [ ${do_b} == 1 ]; then
    b_random_b=$((${RANDOM} % ${bg_level} + ${bg_min}))
else
    b_random_b=$((${RANDOM} % ${bg_min}))
fi

case $link in
    "rb")
        b_random_b=${b_random_r}
        ;;
    "rg")
        b_random_g=${b_random_r}
        ;;
    "gb")
        b_random_g=${b_random_b}
        ;;
esac

if [ ${bg_min} -gt ${fg_level} ]; then
    f_random_r=$((${b_random_r} / 4))
    f_random_g=$((${b_random_g} / 4))
    f_random_b=$((${b_random_b} / 4))
else
    max256 $((${fg_level} + ${b_random_r})); f_random_r=$?
    max256 $((${fg_level} + ${b_random_g})); f_random_g=$?
    max256 $((${fg_level} + ${b_random_b})); f_random_b=$?

fi

background=`printf "#%.2x%.2x%.2x" ${b_random_r} ${b_random_g} ${b_random_b}`
foreground=`printf "#%.2x%.2x%.2x" ${f_random_r} ${f_random_g} ${f_random_b}`

xterm -bg ${background} -fg ${foreground} &
